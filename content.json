{"meta":{"title":"一个Wiki站点","subtitle":null,"description":"爱生活,爱代码,记录各种开发环境的搭建","author":"QXQZX","url":"https://wiki.letcoder.cn","root":"/"},"pages":[{"title":"关于我们","date":"2019-12-26T11:01:53.244Z","updated":"2019-07-22T13:55:26.245Z","comments":true,"path":"about/index.html","permalink":"https://wiki.letcoder.cn/about/index.html","excerpt":"","text":"Cdd-Team团队介绍一个瞎jb整，而且啥也不会的小组织。成员现均为在校生。以开源为共同思想，深入贯彻社会主义核心价值观，积极配合习主席的领导，为全面奔向小康生活贡献力量。代码、技术就是我们强有力的武器，战胜bug使我们的唯一目标。 团队概况还没有什么项目，不排除以后有惊天动地的大项目。 技术栈不限于Java html css JavaScript PHP C++ Python c#.net 当前目的 记录各种开发环境的搭建。防止在电脑崩溃后，重装系统和重新配置开发环境各种头疼的问题 开源项目 不限于学习资源， 主要成员 QXQZX (菜鸡一个，啥也不会) w-qhai (真大佬，强！) 其他投稿：501966782@qq.com加入我们：501966782@qq.com"},{"title":"文章分类","date":"2019-12-26T11:01:53.246Z","updated":"2019-07-22T02:58:16.261Z","comments":true,"path":"categories/index.html","permalink":"https://wiki.letcoder.cn/categories/index.html","excerpt":"","text":""},{"title":"标签库","date":"2019-12-26T11:01:53.244Z","updated":"2019-07-22T02:58:30.847Z","comments":true,"path":"tags/index.html","permalink":"https://wiki.letcoder.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Nginx无法挂载/root目录的静态资源","slug":"nginx-01","date":"2020-02-04T11:56:51.000Z","updated":"2020-02-04T12:11:46.731Z","comments":true,"path":"2020/02/04/nginx-01/","link":"","permalink":"https://wiki.letcoder.cn/2020/02/04/nginx-01/","excerpt":"nginx静态资源文件无法访问，403 forbidden错误在安装 nginx 服务器后，我想把网站的根目录设置为 /root/www/ ，于是对 nginx 的 nginx.conf 文件进行配置","text":"nginx静态资源文件无法访问，403 forbidden错误在安装 nginx 服务器后，我想把网站的根目录设置为 /root/www/ ，于是对 nginx 的 nginx.conf 文件进行配置 先打开 nginx.conf 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677#user nobody;worker_processes 1;#error_log logs/error.log;#error_log logs/error.log notice;#error_log logs/error.log info;#pid logs/nginx.pid;events &#123; worker_connections 1024;&#125;http &#123; include mime.types; default_type application/octet-stream; #log_format main &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos; # &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos; # &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;; #access_log logs/access.log main; sendfile on; #tcp_nopush on; #keepalive_timeout 0; keepalive_timeout 65; #gzip on; server &#123; listen 80; server_name localhost; charset utf-8; #access_log logs/host.access.log main; location / &#123; root /root/www/; ## 设置的地方 index index.html index.htm; &#125; #error_page 404 /404.html; # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root html; &#125; # proxy the PHP scripts to Apache listening on 127.0.0.1:80 # #location ~ \\.php$ &#123; # proxy_pass http://127.0.0.1; #&#125; # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \\.php$ &#123; # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; # include fastcgi_params; #&#125; # deny access to .htaccess files, if Apache&apos;s document root # concurs with nginx&apos;s one # #location ~ /\\.ht &#123; # deny all; #&#125; &#125;&#125; 保存后，重启 nginx 服务，然后出现了 403 错误 解决方案网上查询后说是权限问题，更改 nginx.conf 的第一行将 #user nobody; 改为 user root; 保存，再次重启 nginx 服务，访问成功 如果不想使用root用户运行，就不能把目录放在 /root/ 目录下了，可以选择放在 /home/www 下，并设置 www 的权限 777，同样可以访问成功。 参考资料","categories":[{"name":"web部署","slug":"web部署","permalink":"https://wiki.letcoder.cn/categories/web部署/"},{"name":"nginx采坑","slug":"web部署/nginx采坑","permalink":"https://wiki.letcoder.cn/categories/web部署/nginx采坑/"}],"tags":[{"name":"Nginx","slug":"Nginx","permalink":"https://wiki.letcoder.cn/tags/Nginx/"}]},{"title":"windows下python jupyter tensorflow-gpu环境搭建","slug":"python-jupyter-tensorflow-gpu","date":"2019-07-22T13:30:48.000Z","updated":"2019-07-22T13:39:13.888Z","comments":true,"path":"2019/07/22/python-jupyter-tensorflow-gpu/","link":"","permalink":"https://wiki.letcoder.cn/2019/07/22/python-jupyter-tensorflow-gpu/","excerpt":"python基本环境搭建 首先https://www.python.org/downloads/windows/下载对应版本的python 安装的时候注意一下几点就ok， 选择自定安装是为了更改安装目录， 如果想安装早C盘， 直接点第一个就行，然后无脑next","text":"python基本环境搭建 首先https://www.python.org/downloads/windows/下载对应版本的python 安装的时候注意一下几点就ok， 选择自定安装是为了更改安装目录， 如果想安装早C盘， 直接点第一个就行，然后无脑next 检查一下是否安装好了 出现’&gt;&gt;&gt;’就表示安装好了 打开cmd 输入pip install -i https://pypi.tuna.tsinghua.edu.cn/simple/ jupyter -i 是表示用国内源， 清华的比较快 然后打开cmd输入jypyter notebook 大功告成 tensorflow环境搭建（需要vs2015或者以上版本） 试一下在jupyter里import tensorflow 不出意外会有这个报错，所以我们就要去下载cuda 10.0， 后面的链接是给的9.0， 不用管，让下什么版本就下什么版本，不要没事找事。 https://developer.nvidia.com/cuda-10.0-download-archive cuda 10.0的下载地址 本地版应该比网络版快，点击下载就ok，下载完安装，全部默认，不知道啥用就不要改了。 还需要下载cudnn，这个要注册之后才能下载 下载与cuda对应版本即可， 之后解压， 把解压之后的东西， 放到C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.0对应目录下 接下来配置环境变量： 计算机上点右键，打开属性-&gt;高级系统设置-&gt;环境变量，可以看到系统中多了CUDA_PATH和CUDA_PATH_V8_0两个环境变量，接下来，还要在系统中添加以下几个环境变量： CUDA_SDK_PATH = C:\\ProgramData\\NVIDIA Corporation\\CUDA Samples\\v10.0 CUDA_LIB_PATH = %CUDA_PATH%\\lib\\x64 CUDA_BIN_PATH = %CUDA_PATH%\\bin CUDA_SDK_BIN_PATH = %CUDA_SDK_PATH%\\bin\\win64 CUDA_SDK_LIB_PATH = %CUDA_SDK_PATH%\\common\\lib\\x64‘ 在系统变量 PATH 的末尾添加：CUDA_LIB_PATH%;%CUDA_BIN_PATH%;%CUDA_SDK_LIB_PATH%;%CUDA_SDK_BIN_PATH%;再添加如下4条（默认安装路径）：:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0\\lib\\x64； C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0\\bin； C:\\ProgramData\\NVIDIA Corporation\\CUDA Samples\\v8.0\\common\\lib\\x64； C:\\ProgramData\\NVIDIA Corporation\\CUDA Samples\\v8.0\\bin\\win64； 打开cd C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v10.0\\extras\\demo_suite 然后分别执行bandwidthTest.exe和deviceQuery.exe。 如果都返回Result=PASS就是配置成功了。 进入pythonimport tensorflow啥都没发生，好了可以写代码了。 参考资料","categories":[{"name":"开发环境","slug":"开发环境","permalink":"https://wiki.letcoder.cn/categories/开发环境/"},{"name":"windows","slug":"开发环境/windows","permalink":"https://wiki.letcoder.cn/categories/开发环境/windows/"},{"name":"python开发","slug":"开发环境/windows/python开发","permalink":"https://wiki.letcoder.cn/categories/开发环境/windows/python开发/"}],"tags":[{"name":"python","slug":"python","permalink":"https://wiki.letcoder.cn/tags/python/"},{"name":"机器学习","slug":"机器学习","permalink":"https://wiki.letcoder.cn/tags/机器学习/"}],"author":"w-qhai"},{"title":"Web学习路线","slug":"web","date":"2019-07-22T03:50:06.000Z","updated":"2019-07-22T03:51:43.948Z","comments":true,"path":"2019/07/22/web/","link":"","permalink":"https://wiki.letcoder.cn/2019/07/22/web/","excerpt":"Web前端入门的自学路线新手入门前端，需要学习的基础内容有很多，如下。 博主现在正在努力学习前端ing","text":"Web前端入门的自学路线新手入门前端，需要学习的基础内容有很多，如下。 博主现在正在努力学习前端ing 一、HTML、CSS基础、JavaScript语法基础。学完基础后，可以仿照电商网站（例如京东、小米）做首页的布局。 二、JavaScript语法进阶。包括：作用域和闭包、this和对象原型等。相信我，JS语法，永远是面试中最重要的部分。 三、jQuery、Ajax等。 四、ES6语法。这部分属于JS新增的语法，面试必问。其中，关于promise、async等内容要尤其关注。 五、HTML5和CSS3。要熟悉其中的新特性。 六、canvas。面试时，有的公司不一定会问canvas，靠运气。如果时间不够，这部分的内容可以先不学。 七、移动Web开发、Bootstrap等。要注意移动开发中的适配和兼容性问题。 八、前端框架：Vue.js和React。这两个框架至少要会一个。入门时，建议先学Vue.js，上手相对容易。 九、Node.js。属于加分项，如果时间不够，可以先不学，但至少要知道 node 环境的配置。 十、自动化工具：构建工具 Webpack、构建工具 gulp、CSS 预处理器 Sass 等。注意，Sass 比 Less 用得多，gulp 比 grunt 用得多。 十一、前端综合：HTTP协议、跨域通信、安全问题（CSRF、XSS）、浏览器渲染机制、异步和单线程、页面性能优化、防抖动（Debouncing）和节流阀（Throtting）、lazyload、前端错误监控、虚拟DOM等。 十二、编辑器相关。Sublime Text 是每个学前端的人都要用到的编辑器。另外，前端常见的IDE有两个：WebStorm 和 Visual Studio Code。WebStorm什么都好，可就是太卡顿；VS Code就相对轻量很多。个人总结一下：新手一般用 WebStorm，入门之后，用 VS Code 的人更多。 推荐的图文教程原作者在GitHub上有一个Web前端入门的学习教程，非常详细，地址是：https://github.com/qianguyihao/Web 非常详细和贴心，你值得star。 推荐的技术博客阮一峰 http://www.ruanyifeng.com/blog/ 张鑫旭 https://www.zhangxinxu.com/wordpress/ 推荐的书籍《你不知道的JavaScript》上面这套书有上、中、下三本，你都可以读一读。如果时间不够，那就先读第一本。 《网络是怎样连接的》程序员面试的时候，经常会被问的一个问题是：“在浏览器的地址栏输入url，按下回车后，发生了什么？” 为了清楚这个问题，看上面这本书，足够了。如果你想入门计算机网络，这本书也是必读的。评价非常高。 参考资料","categories":[{"name":"学习路线","slug":"学习路线","permalink":"https://wiki.letcoder.cn/categories/学习路线/"}],"tags":[{"name":"学习路线","slug":"学习路线","permalink":"https://wiki.letcoder.cn/tags/学习路线/"}]},{"title":"提问的艺术","slug":"提问的艺术","date":"2019-07-22T03:20:43.000Z","updated":"2019-07-22T03:22:41.078Z","comments":true,"path":"2019/07/22/提问的艺术/","link":"","permalink":"https://wiki.letcoder.cn/2019/07/22/提问的艺术/","excerpt":"他人提问的方式提问他人是一门艺术. 要知道, 他人没有义务回答你的问题. 更严格上讲, 也没人规定你拥有提问他人的这项权利. 所有的提问都是出于好奇或解决困难的目的, 而所有的无偿回答, 都是出于热心帮助的原因. 回答问题是对你的尊重, 也是对知识本身的尊重. 这也要求着你必须首先尊重他人, 更要尊重知识本身.","text":"他人提问的方式提问他人是一门艺术. 要知道, 他人没有义务回答你的问题. 更严格上讲, 也没人规定你拥有提问他人的这项权利. 所有的提问都是出于好奇或解决困难的目的, 而所有的无偿回答, 都是出于热心帮助的原因. 回答问题是对你的尊重, 也是对知识本身的尊重. 这也要求着你必须首先尊重他人, 更要尊重知识本身. 先搜索再提问不管是在哪个社区里面, 这一点尤为重要. 别人已经遇到过的问题, 解决方法往往也都是一样的. 这时候提一个相同的问题, 除了会被标记为重复问题之外, 还会被很多人置以鄙视的眼神. 这是一种不认真学习和研究的表现, 在社区交际中要特别注意. 另一方面, 提出一个问题到解决一个问题的时间, 是远超过直接搜索现有的问题并找到答案的时间的. 重复提出相同的问题, 对自己来说也不是一个非常经济的选择. 把问题描述清楚我们来看下面两个问题： 1.我的电脑打不开了怎么办? 2.我的电脑今天下午突然无法开机了, 开机显示一个蓝色的画面, 上面提示系统出现问题, 需要重启, 下面的错误代码是System Service Exception, 还写着nvidia.sys等信息. 下面这张图片是我的现象拍照图 [附图片一张].我们可以明显的看到, 第二种问题描述要更为详细, 且更容易分析问题. 现在我们作为一个回答人员来分析这两个问题. 第一个问题只说明了电脑打不开, 而电脑打不开有成千上万种可能, 没有办法一一判断. 因为没有办法快速判断问题, 所以解决这个问题可能需要消耗相当长的时间, 甚至双方互相浪费时间做无用功. 此时更多人的选择是直接忽略, 装作看不到这个问题. 第二个问题从描述就可以看出来是系统蓝屏, 并且提供了一个非常关键的信息 - nvidia.sys. 从这里就可以看出来似乎是显卡驱动导致了无法开机的情况, 这样的问题不是一个大问题, 此时会有非常多的热心朋友会建议此人进入安全模式, 尝试重装显卡驱动等. 我们可以看到, 两个同样的问题使用了不同的方式去描述, 得到的结果也是相差甚远的. 因此, 将问题尽可能描述的清楚, 有助于他人在第一时间锁定问题的范围, 从而快速定位问题根源. 定位问题的速度越快, 越能吸引更多人来回答这么一个问题. 态度要端正要知道, 你是以一个求知者的身份去询问他人, 因此态度上必须端正. 首先不要尝试做伸手党. 当别人回答了你的问题, 请先不要忙着追问, 认真思考可能的解决方案, 并尝试去解决. 别人没有义务手把手教你解决问题, 相反你更需要自己把问题研究清楚. 其次是一定要端正态度. 假设回答区出现了引战现象, 不管引战对象是不是你, 作为询问者的你都一定不要去参与吵架 - 你是来问问题的, 绝对不是来吵架的. 但是你可以心平气和的和他讲道理, 并说明自己的看法, 以及指出他人观点的缺陷之处. 作为询问者, 一定是要端正态度听取正反双方的意见, 并做好问题的总结. 这也不管是对你的名誉还是知识储备, 都是有利而无害的. 平等互助平等互助指的是地位上的平等. 首先提问中不要使用”跪求”/“跪谢”等极端语言. 使用这些语言多半是心智不成熟的心理年龄低龄化人群, 或者是知识储备并不丰富, 却想着急于求成的人群. 这些词并不能显示出你对知识的尊重, 反而是技术圈的一类很避讳的词. 同时, 当你的问题被成功解决了, 请不要忘了向对方致谢. 如果你后来自己解决了问题 要知道并不是所有人都遇到过你遇到的问题. 有些问题可能因为领域偏门/小概率事件/人为原因等因素, 难以让其他人遇到. 这时候可能他人的回答没有办法解决你的问题. 但如果你后来自己解决了这个问题, 请一定要记得回到这个位置, 告诉大家你自己解决了, 并附上自己的解决方案. 这样做的目的一是为了不再浪费他人的时间, 二是告知后来的人这个问题的正确解决方法. 要知道, 这是一个社区的良性循环. 只有在这个良性循环当中不断前进, 我们的社区才会更温馨可靠. 最后…技术圈和其他圈子不同, 技术圈历来是以包容为骄傲的. 我可以不赞同你的想法, 但我一定会支持并维护你的正当权力.很多时候, 其他人的行为或许你不一定认可, 但假设这是一个完全没有恶意动机的行为, 你依然要学会去包容, 或者说, 去理解其这样做的目的, 并给出建设性的建议. 技术圈内人群混杂, 但多半都拥有一颗善良而温暖的心. 他们有的人很热情, 有的人很坚强, 也有的人很脆弱, 也有的人很善良. 你的一句赞美, 你的一次回答, 你的一次包容, 你的一项建议… 或许对于你来说这不过是简单的一个小举动, 但对于整个技术圈来说, 你, 就是他们的核心. English translation:Ways to ask othersAsking others is an art. Be aware that others are not obligated to answer your questions. More strictly speaking, no one stipulates that you have the right to ask others. All questions are for the purpose of curiosity or difficulty solving, and all unpaid answers are for the purpose of enthusiasm. Answering questions is respect for you and respect for knowledge itself. This also requires you to Respect others first, and respect the knowledge itself. Search first and then ask questionsThis is especially important in any community. The problems that others have encountered, the solutions are often the same. At this time, the same question is raised. In addition to being marked as a duplication question, it will be despised by many people. This is a performance that is not seriously studied and studied. It should be paid special attention in community communication. On the other hand, the time to ask a question to solve a problem is far more than the time to directly search for an existing problem and find the answer. Repeating the same question is not a very economical choice for yourself. Describe the problem clearlyLet’s look at the following two questions: 1.What should I do if my computer cannot be opened?2.My computer suddenly can’t boot up this afternoon. The boot shows a blue screen. The above prompts the system to have a problem and needs to be restarted. The following error code is System Service Exception, and also writes nvidia.sys and other information. The picture is a picture of my phenomenon [with a picture].We can clearly see that the second problem description is more detailed and easier to analyze. Now we as an answerer to analyze the two questions.The first question only shows that the computer can’t be opened, and there are thousands of possibilities for the computer to open. There is no way to judge one by one. Because there is no way to quickly judge the problem, it may take a long time to solve this problem. Even the two sides waste time each other to do useless work. At this time, more people’s choices are directly ignored, pretending not to see this problem. The second question can be seen from the description is the system blue screen, and provides a very critical information - nvidia.sys. From here it can be seen that the graphics card driver caused the situation to be unable to boot, such a problem is not a big Problem, there will be a lot of enthusiastic friends will recommend this person to enter safe mode, try to reinstall the graphics card driver and so on. We can see that the two same problems are described in different ways, and the results are quite different. Therefore, it is helpful to describe the problem as clearly as possible, which helps others to lock the problem in the first place. This quickly locates the source of the problem. The faster the problem is located, the more it attracts more people to answer such a question. Correct attitudeYou know, you are asking someone as a seeker, so you must be correct in your attitude. Don’t try to reach out to the party first. When someone answers your question, please don’t ask questions, think about possible solutions, and try to solve them. Others have no obligation to teach you how to solve problems. Instead, you need to put problems yourself. The study is clear. Secondly, it is necessary to correct the attitude. Suppose there is a phenomenon of warfare in the answering area. No matter whether the target of the war is you or not, you must not participate in the quarrel as an inquirer - you are asking questions, definitely not quarreling. You can calmly and reasoning with him, and explain your own opinions, as well as points out the flaws of others’ opinions. As an inquirer, you must correct your opinions and listen to the opinions of both parties, and do a good job of summarizing the questions. Is your reputation or knowledge reserve, both beneficial and harmless. Equality and mutual assistanceEquality and mutual assistance refer to equality in status. First of all, don’t use extreme language such as “begging” / “thank you”. Most of these languages ​​are mentally immature mentally young people, or they are not rich in knowledge, but they are eager to seek success. These words do not show your respect for knowledge, but rather a class of avoidance words in the technical circle. At the same time, when your problem is solved successfully, please don’t forget to thank the other party. If you solve the problem yourself later Be aware that not everyone has encountered the problem you encountered. Some problems may be caused by other factors such as domain bias/small probability events/human causes. At this time, there may be no way for others to solve your problem. The problem. But if you solve this problem yourself, please remember to go back to this position, tell everyone that you have solved it yourself, and attach your own solution. The purpose of this is to stop wasting the time of others, and to inform the later people of the correct solution to this problem. You know, this is a virtuous circle of the community. Only by moving forward in this virtuous circle will our community be more warm and reliable. At last…The technical circle is different from other circles. The technical circle has always been proud of tolerance. I can’t agree with you, but I will support and defend your legitimate rights.Many times, other people’s behavior may not be recognized by you, but assuming that this is a completely malicious act, you still have to learn to be tolerant, or to understand the purpose of doing so, and give constructive suggestions. . The crowds in the technical circle are mixed, but most of them have a kind and warm heart. Some of them are very enthusiastic, some are very strong, some are very fragile, and some are very kind. One of your compliments, one of your answers, one of your tolerance, one of your suggestions… Perhaps this is a simple little move for you, but for the entire technical circle, you are theirs core. 参考资料 文章出处","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://wiki.letcoder.cn/categories/杂谈/"}],"tags":[{"name":"杂谈","slug":"杂谈","permalink":"https://wiki.letcoder.cn/tags/杂谈/"}]},{"title":"Java学习路线","slug":"java","date":"2019-07-22T02:55:39.000Z","updated":"2019-07-22T03:49:42.258Z","comments":true,"path":"2019/07/22/java/","link":"","permalink":"https://wiki.letcoder.cn/2019/07/22/java/","excerpt":"个人认为比较好的Java学习路线 转自群里某大佬涉及：","text":"个人认为比较好的Java学习路线 转自群里某大佬涉及： Java基础： 环境搭建、java编译运行机制、数制、计算机基础 Java语法基础 Java面向对象编程 JDK核心API Java界面编程（AWT） Java高级知识（IO、多线程、异常处理、网络通信） 数据库及Web前端技术： SQL语言 MySql数据库 HTML基础、CSS基础、HTML5技术、CSS技术、JavaScript、XML Bootstrap jQuery、Ajax ** Servlet技术、JSP 技术：** JDBC核心API、JDBC 优化 反射 SVN/Maven/log4j ** Java Web开发及服务端框架（轻量级Java EE）**： Struts2 Hibernate Mybatis SprintIOC、SpringAOP、SpringMVC、SpringBoot、SpringCloud WebService核心概念、WebService组件、SOA git/github Activity 项目实战：涉及知识点除Java、Web、Mysql等基本知识点外，还综合运用Hibernate、Struts、Spring、maven、JUnit、DOM4J、JAXP、Log4J、jquery easyui、Workflow、Freemarker等技术，项目通过多层架构、工作流引擎等串起整个Java开发知识体系，从需求分析开始，运用UML、设计模式等进行设计，然后编码，同时在Linux/Unix上进行部署，实现企业软件开发的全过程。 互联网新技术： 分布式架构的注册中心Zookeeper 全文索引数据库Elasticsearch 日志接收，转发工具Logstash 可视化数据分析平台Kibana 分布式发布-消息订阅系统kafka 虚拟化应用容器Docker 持续集成部分： 持续集成简介 持续集成环境搭建 最简单的测试job 添加HTML测试报告 git支持及代码库监控 使用jenkins运行单元测试用例 工作经验分享： 开发工作会用的各种小工具 如何单元测试用例 代码规范 敏捷软件开发的流程 需求分析的方法 版本管理基本方法 项目管理、质量管理 Github的使用 参考资料","categories":[{"name":"学习路线","slug":"学习路线","permalink":"https://wiki.letcoder.cn/categories/学习路线/"}],"tags":[{"name":"学习路线","slug":"学习路线","permalink":"https://wiki.letcoder.cn/tags/学习路线/"}]}]}